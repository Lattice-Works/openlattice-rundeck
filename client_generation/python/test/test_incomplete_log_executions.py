# coding: utf-8

"""
    Rundeck

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import olrundeck
from olrundeck.models.incomplete_log_executions import IncompleteLogExecutions  # noqa: E501
from olrundeck.rest import ApiException

class TestIncompleteLogExecutions(unittest.TestCase):
    """IncompleteLogExecutions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test IncompleteLogExecutions
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = olrundeck.models.incomplete_log_executions.IncompleteLogExecutions()  # noqa: E501
        if include_optional :
            return IncompleteLogExecutions(
                total = 1.337, 
                max = 1.337, 
                offset = 1.337, 
                executions = [
                    olrundeck.models.incomplete_log_execution.IncompleteLogExecution(
                        id = '0', 
                        project = '0', 
                        href = '0', 
                        permalink = '0', 
                        storage = olrundeck.models.storage.storage(
                            local_files_present = True, 
                            incomplete_filetypes = [
                                '0'
                                ], 
                            queued = True, 
                            failed = True, 
                            date = '0', ), 
                        errors = [
                            '0'
                            ], )
                    ]
            )
        else :
            return IncompleteLogExecutions(
                total = 1.337,
                max = 1.337,
                offset = 1.337,
                executions = [
                    olrundeck.models.incomplete_log_execution.IncompleteLogExecution(
                        id = '0', 
                        project = '0', 
                        href = '0', 
                        permalink = '0', 
                        storage = olrundeck.models.storage.storage(
                            local_files_present = True, 
                            incomplete_filetypes = [
                                '0'
                                ], 
                            queued = True, 
                            failed = True, 
                            date = '0', ), 
                        errors = [
                            '0'
                            ], )
                    ],
        )

    def testIncompleteLogExecutions(self):
        """Test IncompleteLogExecutions"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
