# coding: utf-8

"""
    Rundeck

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openlattice_rundeck
from openlattice_rundeck.models.job_bulk_operation_response import JobBulkOperationResponse  # noqa: E501
from openlattice_rundeck.rest import ApiException

class TestJobBulkOperationResponse(unittest.TestCase):
    """JobBulkOperationResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test JobBulkOperationResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openlattice_rundeck.models.job_bulk_operation_response.JobBulkOperationResponse()  # noqa: E501
        if include_optional :
            return JobBulkOperationResponse(
                request_count = 1.337, 
                allsuccessful = True, 
                succeeded = [
                    openlattice_rundeck.models.bulk_job_succeeded_info.BulkJobSucceededInfo(
                        id = '0', 
                        message = '0', )
                    ], 
                failed = [
                    openlattice_rundeck.models.bulk_job_failed_info.BulkJobFailedInfo(
                        id = '0', 
                        error_code = '0', 
                        message = '0', )
                    ]
            )
        else :
            return JobBulkOperationResponse(
                request_count = 1.337,
                allsuccessful = True,
        )

    def testJobBulkOperationResponse(self):
        """Test JobBulkOperationResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
